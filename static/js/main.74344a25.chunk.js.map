{"version":3,"sources":["components/Task/Task.module.css","components/CreateNewTast/NewTask.module.css","App.module.css","components/TaskList/TaskList.module.css","components/Todo/Todo.module.css","components/CreateNewTast/NewTask.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/Todo/Todo.jsx","App.js","index.js"],"names":["module","exports","NewTask","onChangeHandker","event","setState","value","target","submitHandler","preventDefault","props","saveTask","state","className","style","newTaskCont","form","onSubmit","this","taskText","textarea","onChange","type","submit","React","Component","Task","strikethroughTask","eventObj","border","removeTaskIcon","remove","setTimeout","callback","task_container","content","task","removeTask","onClick","keyOfStore","colorButton","TaskList","tasks","Map","refresh","clickToRemoveTask","bind","key","dataset","curTasks","delete","clear","window","addEventListener","localStorage","setItem","JSON","stringify","Object","fromEntries","parse","getItem","entries","newTask","newState","set","text","clearNewTask","size","isClearAll","clean","map","item","index","toString","startText","develop","love","href","Todo","clearAllClick","clearAll","saveNewTask","numberKey","Math","random","length","toFixed","visibleCallback","clearNewTast","undefined","todo","wrapper","title","visible","App","newTaskVis","todo_container","closeBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74344a25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_container\":\"Task_task_container__19GJ5\",\"content\":\"Task_content__uSX3-\",\"task\":\"Task_task__dPMvK\",\"remove\":\"Task_remove__3FgQA\",\"removeTaskIcon\":\"Task_removeTaskIcon__1IsRY\",\"removeTask\":\"Task_removeTask__1xfcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskCont\":\"NewTask_newTaskCont__1UPIH\",\"form\":\"NewTask_form__1J9Ak\",\"taskText\":\"NewTask_taskText__3rCh5\",\"textarea\":\"NewTask_textarea__2XjTo\",\"submit\":\"NewTask_submit__3SPcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_container\":\"App_todo_container__33cNx\",\"newTask\":\"App_newTask__2Ldze\",\"closeBtn\":\"App_closeBtn__3g6cz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"TaskList_tasks__2dTVQ\",\"startText\":\"TaskList_startText__1r4Uv\",\"develop\":\"TaskList_develop__2Sc6k\",\"love\":\"TaskList_love__36P5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2GHFy\",\"wrapper\":\"Todo_wrapper__2HFV2\",\"title\":\"Todo_title__7FrBu\",\"clear\":\"Todo_clear__2hCec\"};","import React from 'react'\r\nimport style from './NewTask.module.css'\r\n\r\nclass NewTask extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            value: '',\r\n        }\r\n    }\r\n\r\n    onChangeHandker = (event) => {\r\n        this.setState({ value: event.target.value })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n        this.props.saveTask(this.state.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.newTaskCont}>\r\n                <form className={style.form} onSubmit={this.submitHandler}>\r\n                    <label className={style.taskText}>\r\n                        <textarea\r\n                            className={style.textarea}\r\n                            value={this.state.value}\r\n                            onChange={this.onChangeHandker}\r\n                        ></textarea>\r\n                    </label>\r\n                    <input\r\n                        type='submit'\r\n                        value='Add task'\r\n                        className={style.submit}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTask\r\n","import React from 'react'\r\nimport style from './Task.module.css'\r\n\r\nclass Task extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            remove: false\r\n        }\r\n    }\r\n\r\n    strikethroughTask = (event) => {\r\n        let eventObj = event\r\n        event.target.style.border = '2px solid #183588'\r\n        event.target.className = event.target.className + \" \" + style.removeTaskIcon\r\n        this.setState({remove: true})\r\n        setTimeout(() => {\r\n            this.props.callback(eventObj)\r\n        }, 5000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.task_container}>\r\n                <div className={style.content}>\r\n                    <div className={this.state.remove ? `${style.task} ${style.remove}` : style.task}>{this.props.taskText}</div>\r\n                    <div\r\n                        className={style.removeTask}\r\n                        onClick ={this.strikethroughTask}\r\n                        data-key={this.props.keyOfStore}\r\n                        style={{border: `2px solid ${this.props.colorButton%2===0 ? \"#D103FC\" : \"#1654B9\" }`}}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from '../Task/Task'\r\nimport style from './TaskList.module.css'\r\n\r\nclass TaskList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tasks: new Map(),\r\n            refresh: false\r\n        }\r\n        this.clickToRemoveTask = this.clickToRemoveTask.bind(this)\r\n    }\r\n\r\n    clickToRemoveTask(event) {\r\n        let key = event.target.dataset.key\r\n        this.setState((state) => {\r\n            let curTasks = state.tasks\r\n            curTasks.delete(key)\r\n            return {\r\n                tasks: curTasks\r\n            }\r\n        })\r\n    }\r\n\r\n    clean() {\r\n        this.setState((state) => {\r\n            state.tasks.clear()\r\n            return { tasks: state.tasks }\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return props.newTask ? { refresh: true } : { refresh: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', () => {\r\n            localStorage.setItem(\r\n                'taskList',\r\n                JSON.stringify(Object.fromEntries(this.state.tasks))\r\n            )\r\n        })\r\n\r\n        let tasks = JSON.parse(localStorage.getItem('taskList'))\r\n        if (!tasks) return\r\n        this.setState({\r\n            tasks: new Map(Object.entries(tasks)),\r\n        })\r\n        if (this.state.refresh) {\r\n            this.setState((state) => {\r\n                let newTask = this.props.newTask\r\n                let newState = state.tasks.set(newTask.key, newTask.text)\r\n                this.props.clearNewTask()\r\n                return { tasks: newState }\r\n            })\r\n            return\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.tasks.size === 0) {\r\n            localStorage.clear()\r\n            return\r\n        }\r\n        if (this.props.isClearAll) this.clean()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        localStorage.setItem(\r\n            'taskList',\r\n            JSON.stringify(Object.fromEntries(this.state.tasks))\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={style.tasks}>\r\n                    {this.state.tasks.size ? (\r\n                        Object.entries(\r\n                            Object.fromEntries(this.state.tasks.entries())\r\n                        ).map((item, index) => {\r\n                            return (\r\n                                <Task\r\n                                    key={item.toString()}\r\n                                    taskText={item[1]}\r\n                                    keyOfStore={item[0]}\r\n                                    callback={this.clickToRemoveTask}\r\n                                    colorButton={index}\r\n                                />\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <div className={style.startText}>\r\n                            <p>\r\n                                To start using the to-do list, add your first\r\n                                task. To do this, click on the plus in the lower\r\n                                right corner. In the window that opens, write a\r\n                                howl problem and voila!{' '}\r\n                            </p>\r\n                            <span className={style.develop}>\r\n                                Made with <span className={style.love}>❤</span>{' '}\r\n                                by{' '}\r\n                                <a href='https://github.com/EvilTT?tab=repositories'>\r\n                                    EvilTT\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react'\r\nimport NewTask from '../CreateNewTast/NewTask'\r\nimport TaskList from '../TaskList/TaskList'\r\nimport style from './Todo.module.css'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            clearAll: false,\r\n            newTask: undefined,\r\n        }\r\n    }\r\n\r\n    clearAllClick = () => {\r\n        this.setState({ clearAll: true })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.clearAll) this.setState({ clearAll: false })\r\n    }\r\n\r\n    saveNewTask = (taskText) => {\r\n        let numberKey = (Math.random() * taskText.length).toFixed(7)\r\n        this.setState({\r\n            newTask: {\r\n                key: numberKey.toString(),\r\n                text: taskText,\r\n            },\r\n        })\r\n        this.props.visibleCallback()\r\n    }\r\n\r\n    clearNewTast = () => this.setState({ newTask: undefined })\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.todo}>\r\n                <div className={style.wrapper}>\r\n                    <div>\r\n                        <div className={style.title}>\r\n                            {this.props.visible\r\n                                ? \"Todo's Tasks\"\r\n                                : 'Create a new note'}\r\n                        </div>\r\n                        {this.props.visible ? (\r\n                            <TaskList\r\n                                isClearAll={this.state.clearAll}\r\n                                newTask={this.state.newTask}\r\n                                clearNewTask={this.clearNewTast}\r\n                            />\r\n                        ) : (\r\n                            <NewTask saveTask={this.saveNewTask} />\r\n                        )}\r\n                    </div>\r\n                    {this.props.visible ? (\r\n                        <div\r\n                            className={style.clear}\r\n                            onClick={this.clearAllClick}\r\n                        >\r\n                            Clear all\r\n                        </div>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\nimport style from './App.module.css'\nimport Todo from './components/Todo/Todo'\nclass App extends React.Component {\n    constructor(){\n      super()\n      this.state = {\n        newTaskVis: true\n      }\n    }\n\n    newTask = () => this.setState((state) => {\n      return { newTaskVis: !state.newTaskVis}\n    })\n\n    render() {\n        return (\n            <div className={style.todo_container}>\n                <Todo visible = {this.state.newTaskVis} visibleCallback = {this.newTask}/>\n                <div className={this.state.newTaskVis ? style.newTask : `${style.newTask} ${style.closeBtn}`} onClick={this.newTask}>\n                    <span></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}